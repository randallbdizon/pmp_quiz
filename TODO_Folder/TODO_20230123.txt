Goal:
- Turn this into a flashcard game via the browser.

=============================================================================================

Ideas:
- Figure out arrays in terms of JS or React.
- Figure out randomizer.
- Figure out flip animation on click.
- Percentage calculation out of X amount of questions.
- If a question has been answered, don't ask again from array.
- Check mark, X mark, ? mark.
  - Anything marked with ? mark throws question back into a separate array to pull from later.
  - A check to see if anything is in the ? queue.
    - If there is something in the ? queue, pull question from ? queue.
    - If there is nothing in the ? queue, do percentage calc.
  - Use "chip" for React code.
    - OnClick does a fill.
      - OnClick "spawns" a confirm button.
- Have some kind of file just for the questions (db).
  - [A JS file full of arrays of questions and answers?] <--- Maaaaaaybe...
  - Excel? <-------- (convert to CSV)
    - Orientation of questions and multiple choice....
      - Question under A; Answers under B - E?

=============================================================================================

To do (non-priority):
- Aesthetic touches.
  - Rounded corners
  - Color
  - Background image
  - "Adaptive" web design

To do (priority):
- Create repository.
  - Figure out if the React app can be accessed like a website.
- Establish a db for the React app to pull data from.
- Create a functional Q&A thing.
- Find/make questions.
  - Note: ChatGPTv4.0 let me down. ;n;
    - See \\externalHDD\School\Winter_2024\IS450
  - Create database based off of McLahan (or however you spell his name...) questions via YT.
- Use "card" from MUI.
- Add buttons.
- Make buttons do something.


=============================================================================================

Done:
- Figured out workable format for question database.
- Created Repository.
- Created React App for PMBOK game.




Side note: Look up Trello.