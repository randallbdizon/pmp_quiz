Goal:
- Turn this into a flashcard game via the browser.

=============================================================================================

Ideas:
- Figure out arrays in terms of JS or React.
- Figure out randomizer.
- Figure out flip animation on click.
- Percentage calculation out of X amount of questions.
- If a question has been answered, don't ask again from array.
- Check mark, X mark, ? mark.
  - Anything marked with ? mark throws question back into a separate array to pull from later.
  - A check to see if anything is in the ? queue.
    - If there is something in the ? queue, pull question from ? queue.
    - If there is nothing in the ? queue, do percentage calc.
  - Use "chip" for React code.
    - OnClick does a fill.
      - OnClick "spawns" a confirm button.
- Possibly swap question set from array to object?


=============================================================================================

To do (non-priority):
- Aesthetic touches.
  - Rounded corners
  - Color
  - Background image
  - "Adaptive" web design

To do (priority):
- Figure out if the React app can be accessed like a website.
- Add a functional radio selector next to A, B, C, and D.


=============================================================================================

Done:
- Figured out workable format for question database.
- Created Repository.
- Created React App for PMBOK game.
- Finished 100-question data bank.
- Converted file into CSV.
- Converted CSV file into JSON.
- Created a backend (via Glitch) for the JSON.
- Used Card MUI.
- Added buttons.
- Buttons go to previous, next, and shuffle, as well as reveal answer and reason.
- Shifted card to center.

=============================================================================================

Today's Pomodoro:
- Figure out button situation....

Note: Look up SCP (to transfer CSV file to EC2).
scp -r -i <key pair name>.pem <file/dir> ubuntu@<IP address>:~/